name: Laravel

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing
          MYSQL_USER: testing
          MYSQL_PASSWORD: testing
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        # Espera o MySQL ficar saudável antes de rodar os passos
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'      # ajuste se o seu projeto exigir outra
          tools: composer:v2
          extensions: mbstring, bcmath, intl, pdo, pdo_mysql, openssl, tokenizer, xml, ctype, dom, fileinfo, curl

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      # Seta as variáveis de conexão do .env para o serviço MySQL do job
      - name: Configure .env for MySQL
        run: |
          php -r "
            function setEnv(\$k,\$v){
              \$c=file_get_contents('.env');
              if(preg_match('/^'.preg_quote(\$k,'/').'=.*/m',\$c)){
                \$c=preg_replace('/^'.preg_quote(\$k,'/').'=.*/m',\$k.'='.\$v,\$c);
              } else { \$c.=PHP_EOL.\$k.'='.\$v; }
              file_put_contents('.env',\$c);
            }
            setEnv('DB_CONNECTION','mysql');
            setEnv('DB_HOST','127.0.0.1');
            setEnv('DB_PORT','3306');
            setEnv('DB_DATABASE','testing');
            setEnv('DB_USERNAME','testing');
            setEnv('DB_PASSWORD','testing');
          "
          php artisan config:clear

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      # Se seus testes dependem do schema, descomente a linha abaixo:
      # - name: Prepare database
      #   run: php artisan migrate:fresh --seed --force

      - name: Run Tests
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing
          DB_USERNAME: testing
          DB_PASSWORD: testing
        run: php artisan test --no-interaction
